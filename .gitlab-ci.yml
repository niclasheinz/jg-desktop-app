stages:
  - build
  - prepare
  - release

build:linux:
  stage: build
  image: node:14
  script:
    - npm install
    - npm install node-fetch@2
    - npm run build:linux

  artifacts:
    paths:
      - dist/  # Adjust this path to where your Linux build artifacts are located

build:win:
  stage: build
  image: electronuserland/builder:wine
  script:
    - npm install
    - npm install node-fetch@2
    - npm run build:win
  artifacts:
    paths:
      - dist/  # Adjust this path to where your Windows build artifacts are located

prepare_job:
  stage: prepare
  image: alpine:latest
  rules:
  - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - apk add curl jq
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
  artifacts:
    paths:
      - release_notes.md
    expire_in: 1 week  # Optional: Artefakte nach einer Woche ablaufen lassen

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - prepare_job
    - build:linux
    - build:win
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release notes for version $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: 'Linux Build Artifacts'
          url: 'https://gitlab.com/$CI_PROJECT_PATH/-/jobs/build:linux/artifacts/raw/dist/*'  # Link zu den Linux-Artefakten
        - name: 'Windows Build Artifacts'
          url: 'https://gitlab.com/$CI_PROJECT_PATH/-/jobs/build:win/artifacts/raw/dist/*'  # Link zu den Windows-Artefakten