name: Build and Release Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Desktop Applications
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install npm dependencies
      - name: Install dependencies
        run: npm install

      # Extract version and app name from package.json
      - name: Get version and app name
        id: vars
        run: |
          echo "VERSION=$(node -e 'console.log(require(\"./package.json\").version)')" >> $GITHUB_ENV
          echo "APPNAME=$(node -e 'console.log(require(\"./package.json\").productName)')" >> $GITHUB_ENV
        shell: bash

      # Build application based on OS
      - name: Build for ${{ matrix.os }}
        run: |
          if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            npm run build:win
          elif [[ "${{ matrix.os }}" == 'ubuntu-latest' ]]; then
            npm run build:linux
          elif [[ "${{ matrix.os }}" == 'macos-latest' ]]; then
            npm run build:mac
        shell: bash

      # Upload artifacts based on OS
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.exe
            dist/*.AppImage
            dist/*.dmg
          retention-days: 5
